#include<iostream>
#include<stdlib.h>
#include<time.h>
#include<windows.h>
using namespace std;


int game_pc_vs_pc(char array_1[][11], char array_2[][11], int size, int array_1_ship_3[], int array_1_ship_3_1[], int array_2_ship_3[], int array_2_ship_3_1[]);

int game_human_vs_pc(char array_1[][11], char array_2[][11], char array_3[][11], int size, int lv, int array_1_ship_3[], int array_1_ship_3_1[], int array_2_ship_3[], int array_2_ship_3_1[]);

void fill(char array[][11], int size);

void show(char array_1[][11], char array_2[][11], int size);

void show_pc_vs_pc(char array_1[][11], char array_2[][11], int size);

void auto_placement(char array_1[][11], int size, int array_ship_3[], int array_ship_3_1[]);

void human_placement(char array_1[][11], char array_2[][11], int size, int array_ship_3[], int array_ship_3_1[]);


int main()
{
	setlocale(0, "");
	srand(time(NULL));
	const int size = 11;
	char array_1[size][size];
	char array_2[size][size];
	char array_3[size][size];
	int array_1_ship_3[6];        // содержит координаты первого 3-х палубного корабля игрока или компьютера_1
	int array_1_ship_3_1[6];      // содержит координаты второго 3-х палубного корабля игрока или компьютера_2
	int array_2_ship_3[6];        // содержит координаты первого 3-х палубного корабля компьютера_2
	int array_2_ship_3_1[6];      // содержит координаты второго 3-х палубного корабля компьютера_2
	int r;                      // тип расстановки (автоматическая или ручная)
	int vs;                     // режим игры (человек vs компьютер    или    компьютер vs компьютер)
	int lv;                     // уровень сложности игры компьютера (случайный выстрел   или   со стратегией)
	int stop;                  // после остановки игры: продолжать или нет


	while (true)
	{
		system("cls");
		cout << "\n\tПриветствуем Вас в игре \"Морской бой!\"\n";
		cout << "\n\tОсновные правила:\n\t- игровая доска 10*10\n\t- корабли: \n\t\t1 четырехпалубный\n\t\t2 трехпалубных";
		cout << "\n\t\t3 двухпалубных\n\t\t4 однопалубных\n\t- нельзя ставить корабли вплотную друг к другу бортами или углами";
		cout << "\n\n\t- выстрел производится путем указания координат, № строки и № столбца";
		cout << "\n\t- при попадании ход сохраняется за игроком, если игрок выстрелил мимо, ход переходит к сопернику";
		cout << "\n\tПобеду одерживает игрок, первый уничтоживший все корабли соперника.\n\n\t\t\t\t\t\t\t\tУдачи!!!\n\n";
		system("pause");

		fill(array_1, size);
		fill(array_2, size);
		fill(array_3, size);

		system("cls");
		cout << "\n\n\tВыберите режим игры:\n\t - человек vs компьютер - введите '1'\n\t - компьютер vs компьютер - введите '2'\n";
		cin >> vs;
		while (vs != 1 && vs != 2)
		{
			cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
			cout << "\n\n\tВыберите режим игры:\n\t - человек vs компьютер - введите '1'\n\t - компьютер vs компьютер - введите '2'\n";
			cin >> vs;
		}

		if (vs == 1)
		{
			cout << "\n\tРасставим корабли на поле игрока:\n\t- автоматическая расстановка - введите '1'\n\t- ручная расстановка - введите '2':\n\n";
			cin >> r;
			while (r != 1 && r != 2)
			{
				cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
				cout << "\n\tРасставим корабли на поле игрока: автоматическая расстановка - введите '1', ручная расстановка - введите '2':\n\n";
				cin >> r;
			}

			if (r == 1)
			{
				auto_placement(array_1, size, array_1_ship_3, array_1_ship_3_1);
				system("cls");
				
			}
			else
			{
				human_placement(array_1, array_2, size, array_1_ship_3, array_1_ship_3_1);
				system("cls");
				show(array_1, array_2, size);
			}

			cout << "\n\n\tВыберите уровень сложности:\n\t - случайный выстрел - введите '1'\n\t - компьютер играет со стратегией - введите '2'\n";
			cin >> lv;
			while (lv != 1 && lv != 2)
			{
				cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
				cout << "\n\n\tВыберите уровень сложности:\n\t - случайный выстрел - введите '1'\n\t - компьютер играет со стратегией - введите '2'\n";
				cin >> lv;
			}

			system("CLS");
			show(array_1, array_2, size);

			if (game_human_vs_pc(array_1, array_2, array_3, size, lv, array_1_ship_3, array_1_ship_3_1, array_2_ship_3, array_2_ship_3_1) == 1)
			{
				system("CLS");
				cout << "\n\tЖелаете остаться в игре? \n\n\t1 - Да (игра перезапустится)\n\t2 - Нет\n";
				cin >> stop;
				while (stop != 1 && stop != 2)
				{
					cout << "\n\tНеобходимо ввести 1 или 2!!!\n";
					cout << "\n\tЖелаете остаться в игре? \n\n\t1 - Да (игра перезапустится)\n\t2 - Нет\n";
					cin >> stop;
				}
				if (stop == 1)
					continue;
				else if (stop == 2)
					break;
			}
			else
			{
				continue;
			}
		}
		else if (vs == 2)
		{
			if (game_pc_vs_pc(array_1, array_2, size, array_1_ship_3, array_1_ship_3_1, array_2_ship_3, array_2_ship_3_1) == 1)
				continue;
			else
				break;
		}
	}


	cout << endl << endl << endl;
	return 0;
}



int game_pc_vs_pc(char array_1[][11], char array_2[][11], int size, int array_1_ship_3[], int array_1_ship_3_1[], int array_2_ship_3[], int array_2_ship_3_1[])
{
	int stop;            // продолжаем игру после окончания, или нет
	int marker = 1;      // переход хода после промаха: 1 - компьютер_1, 2 - компьютер_2

	char temp_1;         // для определения потоплен или ранен
	int x, y, x_1, y_1, x_m_1, y_m_1;
	int counter_kill_4_pc_1 = 0, counter_kill_3_1_pc_1 = 0, counter_kill_3_2_pc_1 = 0;   // счетчики попадания в корабли компьютера_1
	bool marker_ship_2_3 = false;       // определение, в какой из двух трехпалубных кораблей попали
	bool marker_ship_2_3_1 = false;     // определение, в какой из двух трехпалубных кораблей попали
	bool near_1 = true;         // часть стратегии, есть ли рядом попадание
	bool good_shot_1 = false;   // часть стратегии, есть ли удачное попадание
	int offset_1 = 1;           // часть стратегии, смещение точки выстрела при удачном попадании
	int counter_pc_1 = 0;       // счетчик победы


	char temp_2;
	int x_, y_, x_2, y_2, x_m_2, y_m_2;
	int counter_kill_4_pc_2 = 0, counter_kill_3_1_pc_2 = 0, counter_kill_3_2_pc_2 = 0;
	bool marker_ship_1_3 = false;
	bool marker_ship_1_3_1 = false;
	bool near_2 = true;              
	bool good_shot_2 = false;  
	int offset_2 = 1;                 
	int counter_pc_2 = 0;
	
	auto_placement(array_1, size, array_1_ship_3, array_1_ship_3_1);
	auto_placement(array_2, size, array_2_ship_3, array_2_ship_3_1);
	show_pc_vs_pc(array_1, array_2, size);
	cout << endl << endl;
	system("pause");

	while (true)
	{
		if (marker == 1)
		{
			if (good_shot_1 == true)
			{
				switch (offset_1)
				{
				case 1:
					x_m_1 = x;
					y_m_1 = y;

					x_1 = x + 1;
					y_1 = y;

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x - 1;
						y_1 = y;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x;
						y_1 = y + 1;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x;
						y_1 = y - 1;
					}
					
					if (array_2[x_1 - 1][y_1 - 1] == '4' || array_2[x_1 - 1][y_1 - 1] == '3' || array_2[x_1 - 1][y_1 - 1] == '2' || array_2[x_1 - 1][y_1 - 1] == '1')
					{
						temp_1 = array_2[x_1 - 1][y_1 - 1];

						if (temp_1 == '4')
							counter_kill_4_pc_1++;

						if (
							(temp_1 == '3' && (x_1 - 1) == array_2_ship_3[0] && (y_1 - 1) == array_2_ship_3[1])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[2] && (y_1 - 1) == array_2_ship_3[3])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[4] && (y_1 - 1) == array_2_ship_3[5])
							)
						{
							counter_kill_3_1_pc_1++;
							marker_ship_2_3 = true;
						}

						if (
							(temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[0] && (y_1 - 1) == array_2_ship_3_1[1]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[2] && (y_1 - 1) == array_2_ship_3_1[3]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[4] && (y_1 - 1) == array_2_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_1++;
							marker_ship_2_3_1 = true;
						}

						array_2[x_1 - 1][y_1 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_1 == '4' && counter_kill_4_pc_1 != 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 != 3 && marker_ship_2_3 == true)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 != 3 && marker_ship_2_3_1 == true)
							|| (
								(temp_1 == '2' && array_2[x_1 - 1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 1][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = true;
							if (offset_1 == 4)
							{
								x = x_m_1;
								y = y_m_1;
								offset_1 = 1;
							}
							else
								offset_1++;
							x = x_1;
							y = y_1;
						}
						else if (
							(temp_1 == '1')
							||
							(temp_1 == '2' &&
								(array_2[x_1 - 1][y_1 - 2] != '2'
									&& array_2[x_1 - 1][y_1] != '2'
									&& array_2[x_1 - 2][y_1 - 1] != '2'
									&& array_2[x_1][y_1 - 1] != '2'
									&& array_2[x_1 - 2][y_1 - 2] != '2'
									&& array_2[x_1 - 2][y_1] != '2'
									&& array_2[x_1][y_1 - 2] != '2'
									&& array_2[x_1][y_1] != '2')
								)
							||
							(temp_1 == '4' && counter_kill_4_pc_1 == 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 == 3)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = false;
							offset_1 = 1;
						}
					}
					else
					{
						array_2[x_1 - 1][y_1 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_1:";
						cout << endl << x_1 << endl << y_1;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 2;
						good_shot_1 = true;
						if (offset_1 == 4)
						{
							x = x_m_1;
							y = y_m_1;
							offset_1 = 1;
						}
						else
							offset_1++;
						x = x_m_1;
						y = y_m_1;
					}
					marker_ship_2_3 = false;
					marker_ship_2_3_1 = false;

					if (counter_pc_1 == 20)
					{
						cout << "\n\n\tПобедил компьютер_1 !!!\n\n";
						system("pause");
						break;
					}
					break;

				case 2:
					x_1 = x - 1;
					y_1 = y;

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x;
						y_1 = y + 1;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x;
						y_1 = y - 1;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x + 1;
						y_1 = y;
					}

					if (array_2[x_1 - 1][y_1 - 1] == '4' || array_2[x_1 - 1][y_1 - 1] == '3' || array_2[x_1 - 1][y_1 - 1] == '2' || array_2[x_1 - 1][y_1 - 1] == '1')
					{
						temp_1 = array_2[x_1 - 1][y_1 - 1];

						if (temp_1 == '4')
							counter_kill_4_pc_1++;

						if (
							(temp_1 == '3' && (x_1 - 1) == array_2_ship_3[0] && (y_1 - 1) == array_2_ship_3[1])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[2] && (y_1 - 1) == array_2_ship_3[3])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[4] && (y_1 - 1) == array_2_ship_3[5])
							)
						{
							counter_kill_3_1_pc_1++;
							marker_ship_2_3 = true;
						}

						if (
							(temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[0] && (y_1 - 1) == array_2_ship_3_1[1]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[2] && (y_1 - 1) == array_2_ship_3_1[3]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[4] && (y_1 - 1) == array_2_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_1++;
							marker_ship_2_3_1 = true;
						}

						array_2[x_1 - 1][y_1 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_1 == '4' && counter_kill_4_pc_1 != 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 != 3 && marker_ship_2_3 == true)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 != 3 && marker_ship_2_3_1 == true)
							|| (
								(temp_1 == '2' && array_2[x_1 - 1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 1][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = true;
							if (offset_1 == 4)
							{
								x = x_m_1;
								y = y_m_1;
								offset_1 = 1;
							}
							else
								offset_1++;
							x = x_1;
							y = y_1;
						}
						else if (
							(temp_1 == '1')
							||
							(temp_1 == '2' &&
								(array_2[x_1 - 1][y_1 - 2] != '2'
									&& array_2[x_1 - 1][y_1] != '2'
									&& array_2[x_1 - 2][y_1 - 1] != '2'
									&& array_2[x_1][y_1 - 1] != '2'
									&& array_2[x_1 - 2][y_1 - 2] != '2'
									&& array_2[x_1 - 2][y_1] != '2'
									&& array_2[x_1][y_1 - 2] != '2'
									&& array_2[x_1][y_1] != '2')
								)
							||
							(temp_1 == '4' && counter_kill_4_pc_1 == 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 == 3)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = false;
							offset_1 = 1;
						}
					}
					else
					{
						array_2[x_1 - 1][y_1 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_1:";
						cout << endl << x_1 << endl << y_1;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 2;
						good_shot_1 = true;
						if (offset_1 == 4)
						{
							x = x_m_1;
							y = y_m_1;
							offset_1 = 1;
						}
						else
							offset_1++;
						x = x_m_1;
						y = y_m_1;
					}
					marker_ship_2_3 = false;
					marker_ship_2_3_1 = false;

					if (counter_pc_1 == 20)
					{
						cout << "\n\n\tПобедил компьютер_1 !!!\n\n";
						system("pause");
						break;
					}
					break;

				case 3:
					x_1 = x;
					y_1 = y + 1;

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x;
						y_1 = y - 1;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x + 1;
						y_1 = y;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x - 1;
						y_1 = y;
					}

					if (array_2[x_1 - 1][y_1 - 1] == '4' || array_2[x_1 - 1][y_1 - 1] == '3' || array_2[x_1 - 1][y_1 - 1] == '2' || array_2[x_1 - 1][y_1 - 1] == '1')
					{
						temp_1 = array_2[x_1 - 1][y_1 - 1];

						if (temp_1 == '4')
							counter_kill_4_pc_1++;

						if (
							(temp_1 == '3' && (x_1 - 1) == array_2_ship_3[0] && (y_1 - 1) == array_2_ship_3[1])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[2] && (y_1 - 1) == array_2_ship_3[3])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[4] && (y_1 - 1) == array_2_ship_3[5])
							)
						{
							counter_kill_3_1_pc_1++;
							marker_ship_2_3 = true;
						}

						if (
							(temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[0] && (y_1 - 1) == array_2_ship_3_1[1]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[2] && (y_1 - 1) == array_2_ship_3_1[3]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[4] && (y_1 - 1) == array_2_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_1++;
							marker_ship_2_3_1 = true;
						}

						array_2[x_1 - 1][y_1 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_1 == '4' && counter_kill_4_pc_1 != 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 != 3 && marker_ship_2_3 == true)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 != 3 && marker_ship_2_3_1 == true)
							|| (
								(temp_1 == '2' && array_2[x_1 - 1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 1][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = true;
							if (offset_1 == 4)
							{
								x = x_m_1;
								y = y_m_1;
								offset_1 = 1;
							}
							else
								offset_1++;
							x = x_1;
							y = y_1;
						}
						else if (
							(temp_1 == '1')
							||
							(temp_1 == '2' &&
								(array_2[x_1 - 1][y_1 - 2] != '2'
									&& array_2[x_1 - 1][y_1] != '2'
									&& array_2[x_1 - 2][y_1 - 1] != '2'
									&& array_2[x_1][y_1 - 1] != '2'
									&& array_2[x_1 - 2][y_1 - 2] != '2'
									&& array_2[x_1 - 2][y_1] != '2'
									&& array_2[x_1][y_1 - 2] != '2'
									&& array_2[x_1][y_1] != '2')
								)
							||
							(temp_1 == '4' && counter_kill_4_pc_1 == 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 == 3)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = false;
							offset_1 = 1;
						}
					}
					else
					{
						array_2[x_1 - 1][y_1 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_1:";
						cout << endl << x_1 << endl << y_1;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 2;
						good_shot_1 = true;
						if (offset_1 == 4)
						{
							x = x_m_1;
							y = y_m_1;
							offset_1 = 1;
						}
						else
							offset_1++;
						x = x_m_1;
						y = y_m_1;
					}
					marker_ship_2_3 = false;
					marker_ship_2_3_1 = false;

					if (counter_pc_1 == 20)
					{
						cout << "\n\n\tПобедил компьютер_1 !!!\n\n";
						system("pause");
						break;
					}
					break;

				case 4:
					x_1 = x;
					y_1 = y - 1;

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x + 1;
						y_1 = y;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x - 1;
						y_1 = y;
					}

					if (array_2[x_1 - 1][y_1 - 1] == 'x' || array_2[x_1 - 1][y_1 - 1] == 'o' || x_1 < 1 || x_1 > size - 1 || y_1 < 1 || y_1 > size - 1
						|| array_2[x_1 - 2][y_1 - 2] == 'x'
						|| array_2[x_1 - 2][y_1] == 'x'
						|| array_2[x_1][y_1 - 2] == 'x'
						|| array_2[x_1][y_1] == 'x'
						)
					{
						x_1 = x;
						y_1 = y + 1;
					}


					if (array_2[x_1 - 1][y_1 - 1] == '4' || array_2[x_1 - 1][y_1 - 1] == '3' || array_2[x_1 - 1][y_1 - 1] == '2' || array_2[x_1 - 1][y_1 - 1] == '1')
					{
						temp_1 = array_2[x_1 - 1][y_1 - 1];

						if (temp_1 == '4')
							counter_kill_4_pc_1++;

						if (
							(temp_1 == '3' && (x_1 - 1) == array_2_ship_3[0] && (y_1 - 1) == array_2_ship_3[1])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[2] && (y_1 - 1) == array_2_ship_3[3])
							|| (temp_1 == '3' && (x_1 - 1) == array_2_ship_3[4] && (y_1 - 1) == array_2_ship_3[5])
							)
						{
							counter_kill_3_1_pc_1++;
							marker_ship_2_3 = true;
						}

						if (
							(temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[0] && (y_1 - 1) == array_2_ship_3_1[1]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[2] && (y_1 - 1) == array_2_ship_3_1[3]))
							|| (temp_1 == '3' && ((x_1 - 1) == array_2_ship_3_1[4] && (y_1 - 1) == array_2_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_1++;
							marker_ship_2_3_1 = true;
						}

						array_2[x_1 - 1][y_1 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_1 == '4' && counter_kill_4_pc_1 != 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 != 3 && marker_ship_2_3 == true)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 != 3 && marker_ship_2_3_1 == true)
							|| (
								(temp_1 == '2' && array_2[x_1 - 1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 1][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 1] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1 - 2][y_1] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1 - 2] == '2')
								|| (temp_1 == '2' && array_2[x_1][y_1] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = true;
							if (offset_1 == 4)
							{
								x = x_m_1;
								y = y_m_1;
								offset_1 = 1;
							}
							else
								offset_1++;
							x = x_1;
							y = y_1;
						}
						else if (
							(temp_1 == '1')
							||
							(temp_1 == '2' &&
								(array_2[x_1 - 1][y_1 - 2] != '2'
									&& array_2[x_1 - 1][y_1] != '2'
									&& array_2[x_1 - 2][y_1 - 1] != '2'
									&& array_2[x_1][y_1 - 1] != '2'
									&& array_2[x_1 - 2][y_1 - 2] != '2'
									&& array_2[x_1 - 2][y_1] != '2'
									&& array_2[x_1][y_1 - 2] != '2'
									&& array_2[x_1][y_1] != '2')
								)
							||
							(temp_1 == '4' && counter_kill_4_pc_1 == 4)
							||
							(temp_1 == '3' && counter_kill_3_1_pc_1 == 3)
							||
							(temp_1 == '3' && counter_kill_3_2_pc_1 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_1:";
							cout << endl << x_1 << endl << y_1;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_1++;
							marker = 1;
							good_shot_1 = false;
							offset_1 = 1;
						}
					}
					else
					{
						array_2[x_1 - 1][y_1 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_1:";
						cout << endl << x_1 << endl << y_1;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 2;
						good_shot_1 = true;
						if (offset_1 == 4)
						{
							x = x_m_1;
							y = y_m_1;
							offset_1 = 1;
						}
						else
							offset_1++;
						x = x_m_1;
						y = y_m_1;
					}
					marker_ship_2_3 = false;
					marker_ship_2_3_1 = false;

					if (counter_pc_1 == 20)
					{
						cout << "\n\n\tПобедил компьютер_1 !!!\n\n";
						system("pause");
						break;
					}
					break;
				}
			}
			else if (good_shot_1 == false)
			{
				x = rand() % 10 + 1;
				y = rand() % 10 + 1;

				if (
					array_2[x - 2][y - 2] == 'x'
					|| array_2[x - 2][y] == 'x'
					|| array_2[x][y - 2] == 'x'
					|| array_2[x][y] == 'x'
					)
				{
					near_1 = false;
				}

				while (array_2[x - 1][y - 1] == 'x' || array_2[x - 1][y - 1] == 'o' || near_1 == false)
				{
					near_1 = true;
					x = rand() % 10 + 1;
					y = rand() % 10 + 1;

					if (
						array_2[x - 2][y - 2] == 'x'
						|| array_2[x - 2][y] == 'x'
						|| array_2[x][y - 2] == 'x'
						|| array_2[x][y] == 'x'
						)
					{
						near_1 = false;
					}
				}

				if (array_2[x - 1][y - 1] == '4' || array_2[x - 1][y - 1] == '3' || array_2[x - 1][y - 1] == '2' || array_2[x - 1][y - 1] == '1')
				{
					temp_1 = array_2[x - 1][y - 1];

					if (temp_1 == '4')
						counter_kill_4_pc_1++;

					if (
						(temp_1 == '3' && (x - 1) == array_2_ship_3[0] && (y - 1) == array_2_ship_3[1])
						|| (temp_1 == '3' && (x - 1) == array_2_ship_3[2] && (y - 1) == array_2_ship_3[3])
						|| (temp_1 == '3' && (x - 1) == array_2_ship_3[4] && (y - 1) == array_2_ship_3[5])
						)
					{
						counter_kill_3_1_pc_1++;
						marker_ship_2_3 = true;
					}

					if (
						(temp_1 == '3' && ((x - 1) == array_2_ship_3_1[0] && (y - 1) == array_2_ship_3_1[1]))
						|| (temp_1 == '3' && ((x - 1) == array_2_ship_3_1[2] && (y - 1) == array_2_ship_3_1[3]))
						|| (temp_1 == '3' && ((x - 1) == array_2_ship_3_1[4] && (y - 1) == array_2_ship_3_1[5]))
						)
					{
						counter_kill_3_2_pc_1++;
						marker_ship_2_3_1 = true;
					}

					array_2[x - 1][y - 1] = 'x';
					system("cls");
					show_pc_vs_pc(array_1, array_2, size);
					if (
						(temp_1 == '4' && counter_kill_4_pc_1 != 4)
						||
						(temp_1 == '3' && counter_kill_3_1_pc_1 != 3 && marker_ship_2_3 == true)
						||
						(temp_1 == '3' && counter_kill_3_2_pc_1 != 3 && marker_ship_2_3_1 == true)
						|| (
							(temp_1 == '2' && array_2[x - 1][y - 2] == '2')
							|| (temp_1 == '2' && array_2[x - 1][y] == '2')
							|| (temp_1 == '2' && array_2[x - 2][y - 1] == '2')
							|| (temp_1 == '2' && array_2[x][y - 1] == '2')
							|| (temp_1 == '2' && array_2[x - 2][y - 2] == '2')
							|| (temp_1 == '2' && array_2[x - 2][y] == '2')
							|| (temp_1 == '2' && array_2[x][y - 2] == '2')
							|| (temp_1 == '2' && array_2[x][y] == '2')
							)
						)
					{
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_1:";
						cout << endl << x << endl << y;
						cout << "\n\tЕсть попадание, ранен!!!\n\n";
						counter_pc_1++;
						Sleep(2000);
						marker = 1;
						good_shot_1 = true;
					}
					else if (
						(temp_1 == '1')
						||
						(temp_1 == '2' &&
							(array_2[x - 1][y - 2] != '2'
								&& array_2[x - 1][y] != '2'
								&& array_2[x - 2][y - 1] != '2'
								&& array_2[x][y - 1] != '2'
								&& array_2[x - 2][y - 2] != '2'
								&& array_2[x - 2][y] != '2'
								&& array_2[x][y - 2] != '2'
								&& array_2[x][y] != '2')
							)
						||
						(temp_1 == '4' && counter_kill_4_pc_1 == 4)
						||
						(temp_1 == '3' && counter_kill_3_1_pc_1 == 3)
						||
						(temp_1 == '3' && counter_kill_3_2_pc_1 == 3)
						)
					{
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_1:";
						cout << endl << x << endl << y;
						cout << "\n\tЕсть попадание, потоплен!!!\n\n";
						counter_pc_1++;
						Sleep(2000);
						marker = 1;
					}
				}
				else
				{
					array_2[x - 1][y - 1] = 'o';
					system("cls");
					show_pc_vs_pc(array_1, array_2, size);
					cout << "\n\tкомпьютер_1:";
					cout << endl << x << endl << y;
					cout << "\n\tМимо!!!\n\n";
					Sleep(2000);
					marker = 2;
				}
				marker_ship_2_3 = false;
				marker_ship_2_3_1 = false;

				if (counter_pc_1 == 20)
				{
					cout << "\n\n\tПобедил компьютер_1 !!!\n\n";
					system("pause");
					break;
				}
			}
		}
		else if (marker == 2)
		{
			if (good_shot_2 == true)
			{
				switch (offset_2)
				{
				case 1:
					x_m_2 = x_;
					y_m_2 = y_;

					x_2 = x_ + 1;
					y_2 = y_;

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_ - 1;
						y_2 = y_;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_;
						y_2 = y_ + 1;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_;
						y_2 = y_ - 1;
					}

					if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
					{
						temp_2 = array_1[x_2 - 1][y_2 - 1];

						if (temp_2 == '4')
							counter_kill_4_pc_2++;

						if (
							(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
							)
						{
							counter_kill_3_1_pc_2++;
							marker_ship_1_3 = true;
						}

						if (
							(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_2++;
							marker_ship_1_3_1 = true;
						}

						array_1[x_2 - 1][y_2 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_2 == '4' && counter_kill_4_pc_2 != 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
							|| (
								(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_2;
							y_ = y_2;
						}
						else if (
							(temp_2 == '1')
							||
							(temp_2 == '2' &&
								(array_1[x_2 - 1][y_2 - 2] != '2'
									&& array_1[x_2 - 1][y_2] != '2'
									&& array_1[x_2 - 2][y_2 - 1] != '2'
									&& array_1[x_2][y_2 - 1] != '2'
									&& array_1[x_2 - 2][y_2 - 2] != '2'
									&& array_1[x_2 - 2][y_2] != '2'
									&& array_1[x_2][y_2 - 2] != '2'
									&& array_1[x_2][y_2] != '2')
								)
							||
							(temp_2 == '4' && counter_kill_4_pc_2 == 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = false;
							offset_2 = 1;
						}
					}
					else
					{
						array_1[x_2 - 1][y_2 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_2:";
						cout << endl << x_2 << endl << y_2;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 1;
						good_shot_2 = true;
						if (offset_2 == 4)
						{
							x_ = x_m_2;
							y_ = y_m_2;
							offset_2 = 1;
						}
						else
							offset_2++;
						x_ = x_m_2;
						y_ = y_m_2;
					}
					marker_ship_1_3 = false;
					marker_ship_1_3_1 = false;

					if (counter_pc_2 == 20)
					{
						cout << "\n\n\tПобедил компьютер_2 !!!\n\n";
						system("pause");
						break;
					}
					break;

				case 2:
					x_2 = x_ - 1;
					y_2 = y_;

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_;
						y_2 = y_ + 1;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_;
						y_2 = y_ - 1;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_ + 1;
						y_2 = y_;
					}

					if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
					{
						temp_2 = array_1[x_2 - 1][y_2 - 1];

						if (temp_2 == '4')
							counter_kill_4_pc_2++;

						if (
							(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
							)
						{
							counter_kill_3_1_pc_2++;
							marker_ship_1_3 = true;
						}

						if (
							(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_2++;
							marker_ship_1_3_1 = true;
						}

						array_1[x_2 - 1][y_2 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_2 == '4' && counter_kill_4_pc_2 != 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
							|| (
								(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_2;
							y_ = y_2;
						}
						else if (
							(temp_2 == '1')
							||
							(temp_2 == '2' &&
								(array_1[x_2 - 1][y_2 - 2] != '2'
									&& array_1[x_2 - 1][y_2] != '2'
									&& array_1[x_2 - 2][y_2 - 1] != '2'
									&& array_1[x_2][y_2 - 1] != '2'
									&& array_1[x_2 - 2][y_2 - 2] != '2'
									&& array_1[x_2 - 2][y_2] != '2'
									&& array_1[x_2][y_2 - 2] != '2'
									&& array_1[x_2][y_2] != '2')
								)
							||
							(temp_2 == '4' && counter_kill_4_pc_2 == 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = false;
							offset_2 = 1;
						}
					}
					else
					{
						array_1[x_2 - 1][y_2 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_2:";
						cout << endl << x_2 << endl << y_2;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 1;
						good_shot_2 = true;
						if (offset_2 == 4)
						{
							x_ = x_m_2;
							y_ = y_m_2;
							offset_2 = 1;
						}
						else
							offset_2++;
						x_ = x_m_2;
						y_ = y_m_2;
					}
					marker_ship_1_3 = false;
					marker_ship_1_3_1 = false;

					if (counter_pc_2 == 20)
					{
						cout << "\n\n\tПобедил компьютер_2 !!!\n\n";
						system("pause");
						break;
					}
					break;

				case 3:
					x_2 = x_;
					y_2 = y_ + 1;

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_;
						y_2 = y_ - 1;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_ + 1;
						y_2 = y_;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_ - 1;
						y_2 = y_;
					}

					if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
					{
						temp_2 = array_1[x_2 - 1][y_2 - 1];

						if (temp_2 == '4')
							counter_kill_4_pc_2++;

						if (
							(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
							)
						{
							counter_kill_3_1_pc_2++;
							marker_ship_1_3 = true;
						}

						if (
							(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_2++;
							marker_ship_1_3_1 = true;
						}

						array_1[x_2 - 1][y_2 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_2 == '4' && counter_kill_4_pc_2 != 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
							|| (
								(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_2;
							y_ = y_2;
						}
						else if (
							(temp_2 == '1')
							||
							(temp_2 == '2' &&
								(array_1[x_2 - 1][y_2 - 2] != '2'
									&& array_1[x_2 - 1][y_2] != '2'
									&& array_1[x_2 - 2][y_2 - 1] != '2'
									&& array_1[x_2][y_2 - 1] != '2'
									&& array_1[x_2 - 2][y_2 - 2] != '2'
									&& array_1[x_2 - 2][y_2] != '2'
									&& array_1[x_2][y_2 - 2] != '2'
									&& array_1[x_2][y_2] != '2')
								)
							||
							(temp_2 == '4' && counter_kill_4_pc_2 == 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = false;
							offset_2 = 1;
						}
					}
					else
					{
						array_1[x_2 - 1][y_2 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_2:";
						cout << endl << x_2 << endl << y_2;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 1;
						good_shot_2 = true;
						if (offset_2 == 4)
						{
							x_ = x_m_2;
							y_ = y_m_2;
							offset_2 = 1;
						}
						else
							offset_2++;
						x_ = x_m_2;
						y_ = y_m_2;
					}
					marker_ship_1_3 = false;
					marker_ship_1_3_1 = false;

					if (counter_pc_2 == 20)
					{
						cout << "\n\n\tПобедил компьютер_2 !!!\n\n";
						system("pause");
						break;
					}
					break;

				case 4:
					x_2 = x_;
					y_2 = y_ - 1;

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_ + 1;
						y_2 = y_;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_ - 1;
						y_2 = y_;
					}

					if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
						|| array_1[x_2 - 2][y_2 - 2] == 'x'
						|| array_1[x_2 - 2][y_2] == 'x'
						|| array_1[x_2][y_2 - 2] == 'x'
						|| array_1[x_2][y_2] == 'x'
						)
					{
						x_2 = x_;
						y_2 = y_ + 1;
					}


					if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
					{
						temp_2 = array_1[x_2 - 1][y_2 - 1];

						if (temp_2 == '4')
							counter_kill_4_pc_2++;

						if (
							(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
							|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
							)
						{
							counter_kill_3_1_pc_2++;
							marker_ship_1_3 = true;
						}

						if (
							(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
							|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_2++;
							marker_ship_1_3_1 = true;
						}

						array_1[x_2 - 1][y_2 - 1] = 'x';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						if (
							(temp_2 == '4' && counter_kill_4_pc_2 != 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
							|| (
								(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
								|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
								)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_2;
							y_ = y_2;
						}
						else if (
							(temp_2 == '1')
							||
							(temp_2 == '2' &&
								(array_1[x_2 - 1][y_2 - 2] != '2'
									&& array_1[x_2 - 1][y_2] != '2'
									&& array_1[x_2 - 2][y_2 - 1] != '2'
									&& array_1[x_2][y_2 - 1] != '2'
									&& array_1[x_2 - 2][y_2 - 2] != '2'
									&& array_1[x_2 - 2][y_2] != '2'
									&& array_1[x_2][y_2 - 2] != '2'
									&& array_1[x_2][y_2] != '2')
								)
							||
							(temp_2 == '4' && counter_kill_4_pc_2 == 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
							)
						{
							system("cls");
							show_pc_vs_pc(array_1, array_2, size);
							cout << "\n\tкомпьютер_2:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							Sleep(2000);
							counter_pc_2++;
							marker = 2;
							good_shot_2 = false;
							offset_2 = 1;
						}
					}
					else
					{
						array_1[x_2 - 1][y_2 - 1] = 'o';
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_2:";
						cout << endl << x_2 << endl << y_2;
						cout << "\n\tМимо!!!\n\n";
						Sleep(2000);
						marker = 1;
						good_shot_2 = true;
						if (offset_2 == 4)
						{
							x_ = x_m_2;
							y_ = y_m_2;
							offset_2 = 1;
						}
						else
							offset_2++;
						x_ = x_m_2;
						y_ = y_m_2;
					}
					marker_ship_1_3 = false;
					marker_ship_1_3_1 = false;

					if (counter_pc_2 == 20)
					{
						cout << "\n\n\tПобедил компьютер_2 !!!\n\n";
						system("pause");
						break;
					}
					break;
				}
			}
			else if (good_shot_2 == false)
			{
				x_ = rand() % 10 + 1;
				y_ = rand() % 10 + 1;

				if (
					array_1[x_ - 2][y_ - 2] == 'x'
					|| array_1[x_ - 2][y_] == 'x'
					|| array_1[x_][y_ - 2] == 'x'
					|| array_1[x_][y_] == 'x'
					)
				{
					near_2 = false;
				}

				while (array_1[x_ - 1][y_ - 1] == 'x' || array_1[x_ - 1][y_ - 1] == 'o' || near_2 == false)
				{
					near_2 = true;
					x_ = rand() % 10 + 1;
					y_ = rand() % 10 + 1;

					if (
						array_1[x_ - 2][y_ - 2] == 'x'
						|| array_1[x_ - 2][y_] == 'x'
						|| array_1[x_][y_ - 2] == 'x'
						|| array_1[x_][y_] == 'x'
						)
					{
						near_2 = false;
					}
				}

				if (array_1[x_ - 1][y_ - 1] == '4' || array_1[x_ - 1][y_ - 1] == '3' || array_1[x_ - 1][y_ - 1] == '2' || array_1[x_ - 1][y_ - 1] == '1')
				{
					temp_2 = array_1[x_ - 1][y_ - 1];

					if (temp_2 == '4')
						counter_kill_4_pc_2++;

					if (
						(temp_2 == '3' && (x_ - 1) == array_1_ship_3[0] && (y_ - 1) == array_1_ship_3[1])
						|| (temp_2 == '3' && (x_ - 1) == array_1_ship_3[2] && (y_ - 1) == array_1_ship_3[3])
						|| (temp_2 == '3' && (x_ - 1) == array_1_ship_3[4] && (y_ - 1) == array_1_ship_3[5])
						)
					{
						counter_kill_3_1_pc_2++;
						marker_ship_1_3 = true;
					}

					if (
						(temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[0] && (y_ - 1) == array_1_ship_3_1[1]))
						|| (temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[2] && (y_ - 1) == array_1_ship_3_1[3]))
						|| (temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[4] && (y_ - 1) == array_1_ship_3_1[5]))
						)
					{
						counter_kill_3_2_pc_2++;
						marker_ship_1_3_1 = true;
					}

					array_1[x_ - 1][y_ - 1] = 'x';
					system("cls");
					show_pc_vs_pc(array_1, array_2, size);
					if (
						(temp_2 == '4' && counter_kill_4_pc_2 != 4)
						||
						(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
						||
						(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
						|| (
							(temp_2 == '2' && array_1[x_ - 1][y_ - 2] == '2')
							|| (temp_2 == '2' && array_1[x_ - 1][y_] == '2')
							|| (temp_2 == '2' && array_1[x_ - 2][y_ - 1] == '2')
							|| (temp_2 == '2' && array_1[x_][y_ - 1] == '2')
							|| (temp_2 == '2' && array_1[x_ - 2][y_ - 2] == '2')
							|| (temp_2 == '2' && array_1[x_ - 2][y_] == '2')
							|| (temp_2 == '2' && array_1[x_][y_ - 2] == '2')
							|| (temp_2 == '2' && array_1[x_][y_] == '2')
							)
						)
					{
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_2:";
						cout << endl << x_ << endl << y_;
						cout << "\n\tЕсть попадание, ранен!!!\n\n";
						counter_pc_2++;
						Sleep(2000);
						marker = 2;
						good_shot_2 = true;
					}
					else if (
						(temp_2 == '1')
						||
						(temp_2 == '2' &&
							(array_1[x_ - 1][y_ - 2] != '2'
								&& array_1[x_ - 1][y_] != '2'
								&& array_1[x_ - 2][y_ - 1] != '2'
								&& array_1[x_][y_ - 1] != '2'
								&& array_1[x_ - 2][y_ - 2] != '2'
								&& array_1[x_ - 2][y_] != '2'
								&& array_1[x_][y_ - 2] != '2'
								&& array_1[x_][y_] != '2')
							)
						||
						(temp_2 == '4' && counter_kill_4_pc_2 == 4)
						||
						(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
						||
						(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
						)
					{
						system("cls");
						show_pc_vs_pc(array_1, array_2, size);
						cout << "\n\tкомпьютер_2:";
						cout << endl << x_ << endl << y_;
						cout << "\n\tЕсть попадание, потоплен!!!\n\n";
						counter_pc_2++;
						Sleep(2000);
						marker = 2;
					}
				}
				else
				{
					array_1[x_ - 1][y_ - 1] = 'o';
					system("cls");
					show_pc_vs_pc(array_1, array_2, size);
					cout << "\n\tкомпьютер_2:";
					cout << endl << x_ << endl << y_;
					cout << "\n\tМимо!!!\n\n";
					Sleep(2000);
					marker = 1;
				}
				marker_ship_1_3 = false;
				marker_ship_1_3_1 = false;

				if (counter_pc_2 == 20)
				{
					cout << "\n\n\tПобедил компьютер_2 !!!\n\n";
					system("pause");
					break;
				}
			}
		}
	}



	system("CLS");
	cout << "\n\tЖелаете остаться в игре? \n\n\t1 - Да (игра перезапустится)\n\t2 - Нет\n";
	cin >> stop;
	while (stop != 1 && stop != 2)
	{
		cout << "\n\tНеобходимо ввести 1 или 2!!!\n";
		cout << "\n\tЖелаете остаться в игре? \n\n\t1 - Да (игра перезапустится)\n\t2 - Нет\n";
		cin >> stop;
	}
	if (stop == 1)
		return 1;
	else
		return 2;
}


int game_human_vs_pc(char array_1[][11], char array_2[][11], char array_3[][11], int size, int lv, int array_1_ship_3[], int array_1_ship_3_1[], int array_2_ship_3[], int array_2_ship_3_1[])
{
	int marker = 1;                     // переход хода после промаха: 1 - человек, 2 - компьютер
	int menu;						    // для реализации меню по остановке, приостановке, перезапуску игры
	
	char temp;                          // для определения потоплен или ранен
	int x_h, y_h;
	int counter_kill_4_h = 0, counter_kill_3_h_1 = 0, counter_kill_3_h_2 = 0;      // счетчики попадания в корабли компьютера
	bool marker_ship_2_3 = false;
	bool marker_ship_2_3_1 = false;
	int counter_h = 0;                  // счетчик победы



	char temp_2;
	int x_, y_, x_2, y_2, x_m_2, y_m_2;
	int counter_kill_4_pc_2 = 0, counter_kill_3_1_pc_2 = 0, counter_kill_3_2_pc_2 = 0;
	bool marker_ship_1_3 = false;
	bool marker_ship_1_3_1 = false;
	bool near_2 = true;
	bool good_shot_2 = false;
	int offset_2 = 1;
	int counter_pc_2 = 0;
	auto_placement(array_3, size, array_2_ship_3, array_2_ship_3_1);



	while (true)
	{
		if (marker == 1)
		{
			cout << "\n\tЕсли в качестве номера строки ввести '0' - будет вызвано меню,";
			cout << "\n\tв котором Вы сможете: \n\t- остановить игру;\n\t- приостановить игру;\n\t- запустить игру заново;\n\t";
			cout << "\n\tВведите координаты выстрела - № строки и № столбца:\n";
			cin >> x_h >> y_h;

			while (x_h < 0 || x_h > size - 1 || y_h < 1 || y_h > size - 1 || array_3[x_h - 1][y_h - 1] == 'x' || array_3[x_h - 1][y_h - 1] == 'o')
			{
				cout << "\n\tЕсли в качестве номера строки ввести '0' - будет вызвано меню,";
				cout << "\n\tв котором Вы сможете: \n\t- остановить игру;\n\t- приостановить игру;\n\t- запустить игру заново;\n\t";
				cout << "\n\tНе получится выстрелить в данную точку!!!\n";
				cout << "\n\tВведите координаты выстрела - № строки и № столбца:\n";
				cin >> x_h >> y_h;
			}

			if (x_h == 0)
			{
				system("CLS");
				cout << "\n\t- остановить игру - введите '1'\n\t- приостановить игру - введите '2'\n\t- запустить игру заново - введите '3'\n\t";
				cin >> menu;
				while (menu < 1 || menu > 3)
				{
					cout << "\n\tНеобходимо ввести значение от 1 до 3!!!\n";
					cout << "\n\t- остановить игру - введите '1'\n\t- приостановить игру - введите '2'\n\t- запустить игру заново - введите '3'\n\t";
					cin >> menu;
				}

				switch (menu)
				{
				case 1:
					return 1;
					break;
				break;

				case 2:
					show(array_1, array_2, size);
					cout << "\n\n\tИгра на паузе.\n";
					system("pause");
				break;

				case 3:
					system("CLS");
					return 2;
					break;
				break;
				}
			}

			if (x_h == 0)
				continue;


			temp = array_3[x_h - 1][y_h - 1];

			if (array_3[x_h - 1][y_h - 1] == '4' || array_3[x_h - 1][y_h - 1] == '3' || array_3[x_h - 1][y_h - 1] == '2' || array_3[x_h - 1][y_h - 1] == '1')
			{
				if (temp == '4')
					counter_kill_4_h++;

				if (
					(temp == '3' && (x_h - 1) == array_2_ship_3[0] && (y_h - 1) == array_2_ship_3[1])
					|| (temp == '3' && (x_h - 1) == array_2_ship_3[2] && (y_h - 1) == array_2_ship_3[3])
					|| (temp == '3' && (x_h - 1) == array_2_ship_3[4] && (y_h - 1) == array_2_ship_3[5])
					)
				{
					counter_kill_3_h_1++;
					marker_ship_2_3 = true;
				}

				if (
					(temp == '3' && ((x_h - 1) == array_2_ship_3_1[0] && (y_h - 1) == array_2_ship_3_1[1]))
					|| (temp == '3' && ((x_h - 1) == array_2_ship_3_1[2] && (y_h - 1) == array_2_ship_3_1[3]))
					|| (temp == '3' && ((x_h - 1) == array_2_ship_3_1[4] && (y_h - 1) == array_2_ship_3_1[5]))
					)
				{
					counter_kill_3_h_2++;
					marker_ship_2_3_1 = true;
				}

				array_3[x_h - 1][y_h - 1] = 'x';
				array_2[x_h - 1][y_h - 1] = 'x';
				system("cls");
				show(array_1, array_2, size);

				if (
					(temp == '4' && counter_kill_4_h != 4)
					||
					(temp == '3' && counter_kill_3_h_1 != 3 && marker_ship_2_3 == true)
					||
					(temp == '3' && counter_kill_3_h_2 != 3 && marker_ship_2_3_1 == true)
					|| (
						(temp == '2' && array_3[x_h - 1][y_h - 2] == '2')
						|| (temp == '2' && array_3[x_h - 1][y_h] == '2')
						|| (temp == '2' && array_3[x_h - 2][y_h - 1] == '2')
						|| (temp == '2' && array_3[x_h][y_h - 1] == '2')
						|| (temp == '2' && array_3[x_h - 2][y_h - 2] == '2')
						|| (temp == '2' && array_3[x_h - 2][y_h] == '2')
						|| (temp == '2' && array_3[x_h][y_h - 2] == '2')
						|| (temp == '2' && array_3[x_h][y_h] == '2')
						)
					)
				{
					system("cls");
					show(array_1, array_2, size);
					cout << "\n\tЧеловек:";
					cout << endl << x_h << endl << y_h;
					cout << "\n\tЕсть попадание, ранен!!!\n\n";
					system("pause");
					counter_h++;
					marker = 1;
				}
				else if (
					(temp == '1')
					||
					(temp == '2' &&
						(array_3[x_h - 1][y_h - 2] != '2'
							&& array_3[x_h - 1][y_h] != '2'
							&& array_3[x_h - 2][y_h - 1] != '2'
							&& array_3[x_h][y_h - 1] != '2'
							&& array_3[x_h - 2][y_h - 2] != '2'
							&& array_3[x_h - 2][y_h] != '2'
							&& array_3[x_h][y_h - 2] != '2'
							&& array_3[x_h][y_h] != '2')
						)
					||
					(temp == '4' && counter_kill_4_h == 4)
					||
					(temp == '3' && counter_kill_3_h_1 == 3)
					||
					(temp == '3' && counter_kill_3_h_2 == 3)
					)
				{
					system("cls");
					show(array_1, array_2, size);
					cout << "\n\tЧеловек:";
					cout << endl << x_h << endl << y_h;
					cout << "\n\tЕсть попадание, потоплен!!!\n\n";
					system("pause");
					counter_h++;
					marker = 1;
				}
			}
			else
			{
				array_3[x_h - 1][y_h - 1] = 'o';
				array_2[x_h - 1][y_h - 1] = 'o';
				system("cls");
				show(array_1, array_2, size);
				cout << "\n\tЧеловек:";
				cout << "\n\tМимо!!!\n\n";
				system("pause");
				marker = 2;
			}
			if (counter_h == 20)
			{
				cout << "\n\n\tВы победили, поздравляем!!!";
				break;
			}
		}
		else if (marker == 2)
		{
			if (lv == 1)
			{
				x_ = rand() % 10 + 1;
				y_ = rand() % 10 + 1;


				while (array_1[x_ - 1][y_ - 1] == 'x' || array_1[x_ - 1][y_ - 1] == 'o')
				{
					x_ = rand() % 10 + 1;
					y_ = rand() % 10 + 1;
				}

				if (array_1[x_ - 1][y_ - 1] == '4' || array_1[x_ - 1][y_ - 1] == '3' || array_1[x_ - 1][y_ - 1] == '2' || array_1[x_ - 1][y_ - 1] == '1')
				{
					temp_2 = array_1[x_ - 1][y_ - 1];

					if (temp_2 == '4')
						counter_kill_4_pc_2++;

					if (
						(temp_2 == '3' && (x_ - 1) == array_1_ship_3[0] && (y_ - 1) == array_1_ship_3[1])
						|| (temp_2 == '3' && (x_ - 1) == array_1_ship_3[2] && (y_ - 1) == array_1_ship_3[3])
						|| (temp_2 == '3' && (x_ - 1) == array_1_ship_3[4] && (y_ - 1) == array_1_ship_3[5])
						)
					{
						counter_kill_3_1_pc_2++;
						marker_ship_1_3 = true;
					}

					if (
						(temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[0] && (y_ - 1) == array_1_ship_3_1[1]))
						|| (temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[2] && (y_ - 1) == array_1_ship_3_1[3]))
						|| (temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[4] && (y_ - 1) == array_1_ship_3_1[5]))
						)
					{
						counter_kill_3_2_pc_2++;
						marker_ship_1_3_1 = true;
					}

					array_1[x_ - 1][y_ - 1] = 'x';
					system("cls");
					show(array_1, array_2, size);
					if (
						(temp_2 == '4' && counter_kill_4_pc_2 != 4)
						||
						(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
						||
						(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
						|| (
							(temp_2 == '2' && array_1[x_ - 1][y_ - 2] == '2')
							|| (temp_2 == '2' && array_1[x_ - 1][y_] == '2')
							|| (temp_2 == '2' && array_1[x_ - 2][y_ - 1] == '2')
							|| (temp_2 == '2' && array_1[x_][y_ - 1] == '2')
							|| (temp_2 == '2' && array_1[x_ - 2][y_ - 2] == '2')
							|| (temp_2 == '2' && array_1[x_ - 2][y_] == '2')
							|| (temp_2 == '2' && array_1[x_][y_ - 2] == '2')
							|| (temp_2 == '2' && array_1[x_][y_] == '2')
							)
						)
					{
						system("cls");
						show(array_1, array_2, size);
						cout << "\n\tкомпьютер:";
						cout << endl << x_ << endl << y_;
						cout << "\n\tЕсть попадание, ранен!!!\n\n";
						system("pause");
						counter_pc_2++;
						marker = 2;
					}
					else if (
						(temp_2 == '1')
						||
						(temp_2 == '2' &&
							(array_1[x_ - 1][y_ - 2] != '2'
								&& array_1[x_ - 1][y_] != '2'
								&& array_1[x_ - 2][y_ - 1] != '2'
								&& array_1[x_][y_ - 1] != '2'
								&& array_1[x_ - 2][y_ - 2] != '2'
								&& array_1[x_ - 2][y_] != '2'
								&& array_1[x_][y_ - 2] != '2'
								&& array_1[x_][y_] != '2')
							)
						||
						(temp_2 == '4' && counter_kill_4_pc_2 == 4)
						||
						(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
						||
						(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
						)
					{
						system("cls");
						show(array_1, array_2, size);
						cout << "\n\tкомпьютер:";
						cout << endl << x_ << endl << y_;
						cout << "\n\tЕсть попадание, потоплен!!!\n\n";
						system("pause");
						counter_pc_2++;
						marker = 2;
					}
				}
				else
				{
					array_1[x_ - 1][y_ - 1] = 'o';
					system("cls");
					show(array_1, array_2, size);
					cout << "\n\tкомпьютер:";
					cout << endl << x_ << endl << y_;
					cout << "\n\tМимо!!!\n\n";
					system("pause");
					marker = 1;
				}
				marker_ship_1_3 = false;
				marker_ship_1_3_1 = false;

				if (counter_pc_2 == 20)
				{
					cout << "\n\n\tПобедил компьютер !!!\n\n";
					system("pause");
					break;
				}
			}
			else if (lv == 2) // со стратегией
			{
				if (good_shot_2 == true)
				{
					switch (offset_2)
					{
					case 1:
						x_m_2 = x_;
						y_m_2 = y_;

						x_2 = x_ + 1;
						y_2 = y_;

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_ - 1;
							y_2 = y_;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_;
							y_2 = y_ + 1;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_;
							y_2 = y_ - 1;
						}

						if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
						{
							temp_2 = array_1[x_2 - 1][y_2 - 1];

							if (temp_2 == '4')
								counter_kill_4_pc_2++;

							if (
								(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
								)
							{
								counter_kill_3_1_pc_2++;
								marker_ship_1_3 = true;
							}

							if (
								(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
								)
							{
								counter_kill_3_2_pc_2++;
								marker_ship_1_3_1 = true;
							}

							array_1[x_2 - 1][y_2 - 1] = 'x';
							system("cls");
							show(array_1, array_2, size);
							if (
								(temp_2 == '4' && counter_kill_4_pc_2 != 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
								|| (
									(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
									)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, ранен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = true;
								if (offset_2 == 4)
								{
									x_ = x_m_2;
									y_ = y_m_2;
									offset_2 = 1;
								}
								else
									offset_2++;
								x_ = x_2;
								y_ = y_2;
							}
							else if (
								(temp_2 == '1')
								||
								(temp_2 == '2' &&
									(array_1[x_2 - 1][y_2 - 2] != '2'
										&& array_1[x_2 - 1][y_2] != '2'
										&& array_1[x_2 - 2][y_2 - 1] != '2'
										&& array_1[x_2][y_2 - 1] != '2'
										&& array_1[x_2 - 2][y_2 - 2] != '2'
										&& array_1[x_2 - 2][y_2] != '2'
										&& array_1[x_2][y_2 - 2] != '2'
										&& array_1[x_2][y_2] != '2')
									)
								||
								(temp_2 == '4' && counter_kill_4_pc_2 == 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, потоплен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = false;
								offset_2 = 1;
							}
						}
						else
						{
							array_1[x_2 - 1][y_2 - 1] = 'o';
							system("cls");
							show(array_1, array_2, size);
							cout << "\n\tкомпьютер:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tМимо!!!\n\n";
							system("pause");
							marker = 1;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_m_2;
							y_ = y_m_2;
						}
						marker_ship_1_3 = false;
						marker_ship_1_3_1 = false;

						if (counter_pc_2 == 20)
						{
							cout << "\n\n\tПобедил компьютер !!!\n\n";
							system("pause");
							break;
						}
						break;

					case 2:
						x_2 = x_ - 1;
						y_2 = y_;

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_;
							y_2 = y_ + 1;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_;
							y_2 = y_ - 1;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_ + 1;
							y_2 = y_;
						}

						if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
						{
							temp_2 = array_1[x_2 - 1][y_2 - 1];

							if (temp_2 == '4')
								counter_kill_4_pc_2++;

							if (
								(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
								)
							{
								counter_kill_3_1_pc_2++;
								marker_ship_1_3 = true;
							}

							if (
								(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
								)
							{
								counter_kill_3_2_pc_2++;
								marker_ship_1_3_1 = true;
							}

							array_1[x_2 - 1][y_2 - 1] = 'x';
							system("cls");
							show(array_1, array_2, size);
							if (
								(temp_2 == '4' && counter_kill_4_pc_2 != 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
								|| (
									(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
									)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, ранен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = true;
								if (offset_2 == 4)
								{
									x_ = x_m_2;
									y_ = y_m_2;
									offset_2 = 1;
								}
								else
									offset_2++;
								x_ = x_2;
								y_ = y_2;
							}
							else if (
								(temp_2 == '1')
								||
								(temp_2 == '2' &&
									(array_1[x_2 - 1][y_2 - 2] != '2'
										&& array_1[x_2 - 1][y_2] != '2'
										&& array_1[x_2 - 2][y_2 - 1] != '2'
										&& array_1[x_2][y_2 - 1] != '2'
										&& array_1[x_2 - 2][y_2 - 2] != '2'
										&& array_1[x_2 - 2][y_2] != '2'
										&& array_1[x_2][y_2 - 2] != '2'
										&& array_1[x_2][y_2] != '2')
									)
								||
								(temp_2 == '4' && counter_kill_4_pc_2 == 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, потоплен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = false;
								offset_2 = 1;
							}
						}
						else
						{
							array_1[x_2 - 1][y_2 - 1] = 'o';
							system("cls");
							show(array_1, array_2, size);
							cout << "\n\tкомпьютер:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tМимо!!!\n\n";
							system("pause");
							marker = 1;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_m_2;
							y_ = y_m_2;
						}
						marker_ship_1_3 = false;
						marker_ship_1_3_1 = false;

						if (counter_pc_2 == 20)
						{
							cout << "\n\n\tПобедил компьютер !!!\n\n";
							system("pause");
							break;
						}
						break;

					case 3:
						x_2 = x_;
						y_2 = y_ + 1;

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_;
							y_2 = y_ - 1;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_ + 1;
							y_2 = y_;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_ - 1;
							y_2 = y_;
						}

						if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
						{
							temp_2 = array_1[x_2 - 1][y_2 - 1];

							if (temp_2 == '4')
								counter_kill_4_pc_2++;

							if (
								(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
								)
							{
								counter_kill_3_1_pc_2++;
								marker_ship_1_3 = true;
							}

							if (
								(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
								)
							{
								counter_kill_3_2_pc_2++;
								marker_ship_1_3_1 = true;
							}

							array_1[x_2 - 1][y_2 - 1] = 'x';
							system("cls");
							show(array_1, array_2, size);
							if (
								(temp_2 == '4' && counter_kill_4_pc_2 != 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
								|| (
									(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
									)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, ранен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = true;
								if (offset_2 == 4)
								{
									x_ = x_m_2;
									y_ = y_m_2;
									offset_2 = 1;
								}
								else
									offset_2++;
								x_ = x_2;
								y_ = y_2;
							}
							else if (
								(temp_2 == '1')
								||
								(temp_2 == '2' &&
									(array_1[x_2 - 1][y_2 - 2] != '2'
										&& array_1[x_2 - 1][y_2] != '2'
										&& array_1[x_2 - 2][y_2 - 1] != '2'
										&& array_1[x_2][y_2 - 1] != '2'
										&& array_1[x_2 - 2][y_2 - 2] != '2'
										&& array_1[x_2 - 2][y_2] != '2'
										&& array_1[x_2][y_2 - 2] != '2'
										&& array_1[x_2][y_2] != '2')
									)
								||
								(temp_2 == '4' && counter_kill_4_pc_2 == 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, потоплен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = false;
								offset_2 = 1;
							}
						}
						else
						{
							array_1[x_2 - 1][y_2 - 1] = 'o';
							system("cls");
							show(array_1, array_2, size);
							cout << "\n\tкомпьютер:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tМимо!!!\n\n";
							system("pause");
							marker = 1;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_m_2;
							y_ = y_m_2;
						}
						marker_ship_1_3 = false;
						marker_ship_1_3_1 = false;

						if (counter_pc_2 == 20)
						{
							cout << "\n\n\tПобедил компьютер !!!\n\n";
							system("pause");
							break;
						}
						break;

					case 4:
						x_2 = x_;
						y_2 = y_ - 1;

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_ + 1;
							y_2 = y_;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_ - 1;
							y_2 = y_;
						}

						if (array_1[x_2 - 1][y_2 - 1] == 'x' || array_1[x_2 - 1][y_2 - 1] == 'o' || x_2 < 1 || x_2 > size - 1 || y_2 < 1 || y_2 > size - 1
							|| array_1[x_2 - 2][y_2 - 2] == 'x'
							|| array_1[x_2 - 2][y_2] == 'x'
							|| array_1[x_2][y_2 - 2] == 'x'
							|| array_1[x_2][y_2] == 'x'
							)
						{
							x_2 = x_;
							y_2 = y_ + 1;
						}


						if (array_1[x_2 - 1][y_2 - 1] == '4' || array_1[x_2 - 1][y_2 - 1] == '3' || array_1[x_2 - 1][y_2 - 1] == '2' || array_1[x_2 - 1][y_2 - 1] == '1')
						{
							temp_2 = array_1[x_2 - 1][y_2 - 1];

							if (temp_2 == '4')
								counter_kill_4_pc_2++;

							if (
								(temp_2 == '3' && (x_2 - 1) == array_1_ship_3[0] && (y_2 - 1) == array_1_ship_3[1])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[2] && (y_2 - 1) == array_1_ship_3[3])
								|| (temp_2 == '3' && (x_2 - 1) == array_1_ship_3[4] && (y_2 - 1) == array_1_ship_3[5])
								)
							{
								counter_kill_3_1_pc_2++;
								marker_ship_1_3 = true;
							}

							if (
								(temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[0] && (y_2 - 1) == array_1_ship_3_1[1]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[2] && (y_2 - 1) == array_1_ship_3_1[3]))
								|| (temp_2 == '3' && ((x_2 - 1) == array_1_ship_3_1[4] && (y_2 - 1) == array_1_ship_3_1[5]))
								)
							{
								counter_kill_3_2_pc_2++;
								marker_ship_1_3_1 = true;
							}

							array_1[x_2 - 1][y_2 - 1] = 'x';
							system("cls");
							show(array_1, array_2, size);
							if (
								(temp_2 == '4' && counter_kill_4_pc_2 != 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
								|| (
									(temp_2 == '2' && array_1[x_2 - 1][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 1][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 1] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2 - 2][y_2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2 - 2] == '2')
									|| (temp_2 == '2' && array_1[x_2][y_2] == '2')
									)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, ранен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = true;
								if (offset_2 == 4)
								{
									x_ = x_m_2;
									y_ = y_m_2;
									offset_2 = 1;
								}
								else
									offset_2++;
								x_ = x_2;
								y_ = y_2;
							}
							else if (
								(temp_2 == '1')
								||
								(temp_2 == '2' &&
									(array_1[x_2 - 1][y_2 - 2] != '2'
										&& array_1[x_2 - 1][y_2] != '2'
										&& array_1[x_2 - 2][y_2 - 1] != '2'
										&& array_1[x_2][y_2 - 1] != '2'
										&& array_1[x_2 - 2][y_2 - 2] != '2'
										&& array_1[x_2 - 2][y_2] != '2'
										&& array_1[x_2][y_2 - 2] != '2'
										&& array_1[x_2][y_2] != '2')
									)
								||
								(temp_2 == '4' && counter_kill_4_pc_2 == 4)
								||
								(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
								||
								(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
								)
							{
								system("cls");
								show(array_1, array_2, size);
								cout << "\n\tкомпьютер:";
								cout << endl << x_2 << endl << y_2;
								cout << "\n\tЕсть попадание, потоплен!!!\n\n";
								system("pause");
								counter_pc_2++;
								marker = 2;
								good_shot_2 = false;
								offset_2 = 1;
							}
						}
						else
						{
							array_1[x_2 - 1][y_2 - 1] = 'o';
							system("cls");
							show(array_1, array_2, size);
							cout << "\n\tкомпьютер:";
							cout << endl << x_2 << endl << y_2;
							cout << "\n\tМимо!!!\n\n";
							system("pause");
							marker = 1;
							good_shot_2 = true;
							if (offset_2 == 4)
							{
								x_ = x_m_2;
								y_ = y_m_2;
								offset_2 = 1;
							}
							else
								offset_2++;
							x_ = x_m_2;
							y_ = y_m_2;
						}
						marker_ship_1_3 = false;
						marker_ship_1_3_1 = false;

						if (counter_pc_2 == 20)
						{
							cout << "\n\n\tПобедил компьютер !!!\n\n";
							system("pause");
							break;
						}
						break;
					}
				}
				else if (good_shot_2 == false)
				{
					x_ = rand() % 10 + 1;
					y_ = rand() % 10 + 1;

					if (
						array_1[x_ - 2][y_ - 2] == 'x'
						|| array_1[x_ - 2][y_] == 'x'
						|| array_1[x_][y_ - 2] == 'x'
						|| array_1[x_][y_] == 'x'
						)
					{
						near_2 = false;
					}

					while (array_1[x_ - 1][y_ - 1] == 'x' || array_1[x_ - 1][y_ - 1] == 'o' || near_2 == false)
					{
						near_2 = true;
						x_ = rand() % 10 + 1;
						y_ = rand() % 10 + 1;

						if (
							array_1[x_ - 2][y_ - 2] == 'x'
							|| array_1[x_ - 2][y_] == 'x'
							|| array_1[x_][y_ - 2] == 'x'
							|| array_1[x_][y_] == 'x'
							)
						{
							near_2 = false;
						}
					}

					if (array_1[x_ - 1][y_ - 1] == '4' || array_1[x_ - 1][y_ - 1] == '3' || array_1[x_ - 1][y_ - 1] == '2' || array_1[x_ - 1][y_ - 1] == '1')
					{
						temp_2 = array_1[x_ - 1][y_ - 1];

						if (temp_2 == '4')
							counter_kill_4_pc_2++;

						if (
							(temp_2 == '3' && (x_ - 1) == array_1_ship_3[0] && (y_ - 1) == array_1_ship_3[1])
							|| (temp_2 == '3' && (x_ - 1) == array_1_ship_3[2] && (y_ - 1) == array_1_ship_3[3])
							|| (temp_2 == '3' && (x_ - 1) == array_1_ship_3[4] && (y_ - 1) == array_1_ship_3[5])
							)
						{
							counter_kill_3_1_pc_2++;
							marker_ship_1_3 = true;
						}

						if (
							(temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[0] && (y_ - 1) == array_1_ship_3_1[1]))
							|| (temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[2] && (y_ - 1) == array_1_ship_3_1[3]))
							|| (temp_2 == '3' && ((x_ - 1) == array_1_ship_3_1[4] && (y_ - 1) == array_1_ship_3_1[5]))
							)
						{
							counter_kill_3_2_pc_2++;
							marker_ship_1_3_1 = true;
						}

						array_1[x_ - 1][y_ - 1] = 'x';
						system("cls");
						show(array_1, array_2, size);
						if (
							(temp_2 == '4' && counter_kill_4_pc_2 != 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 != 3 && marker_ship_1_3 == true)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 != 3 && marker_ship_1_3_1 == true)
							|| (
								(temp_2 == '2' && array_1[x_ - 1][y_ - 2] == '2')
								|| (temp_2 == '2' && array_1[x_ - 1][y_] == '2')
								|| (temp_2 == '2' && array_1[x_ - 2][y_ - 1] == '2')
								|| (temp_2 == '2' && array_1[x_][y_ - 1] == '2')
								|| (temp_2 == '2' && array_1[x_ - 2][y_ - 2] == '2')
								|| (temp_2 == '2' && array_1[x_ - 2][y_] == '2')
								|| (temp_2 == '2' && array_1[x_][y_ - 2] == '2')
								|| (temp_2 == '2' && array_1[x_][y_] == '2')
								)
							)
						{
							system("cls");
							show(array_1, array_2, size);
							cout << "\n\tкомпьютер:";
							cout << endl << x_ << endl << y_;
							cout << "\n\tЕсть попадание, ранен!!!\n\n";
							system("pause");
							counter_pc_2++;
							marker = 2;
							good_shot_2 = true;
						}
						else if (
							(temp_2 == '1')
							||
							(temp_2 == '2' &&
								(array_1[x_ - 1][y_ - 2] != '2'
									&& array_1[x_ - 1][y_] != '2'
									&& array_1[x_ - 2][y_ - 1] != '2'
									&& array_1[x_][y_ - 1] != '2'
									&& array_1[x_ - 2][y_ - 2] != '2'
									&& array_1[x_ - 2][y_] != '2'
									&& array_1[x_][y_ - 2] != '2'
									&& array_1[x_][y_] != '2')
								)
							||
							(temp_2 == '4' && counter_kill_4_pc_2 == 4)
							||
							(temp_2 == '3' && counter_kill_3_1_pc_2 == 3)
							||
							(temp_2 == '3' && counter_kill_3_2_pc_2 == 3)
							)
						{
							system("cls");
							show(array_1, array_2, size);
							cout << "\n\tкомпьютер:";
							cout << endl << x_ << endl << y_;
							cout << "\n\tЕсть попадание, потоплен!!!\n\n";
							system("pause");
							counter_pc_2++;
							marker = 2;
						}
					}
					else
					{
						array_1[x_ - 1][y_ - 1] = 'o';
						system("cls");
						show(array_1, array_2, size);
						cout << "\n\tкомпьютер:";
						cout << endl << x_ << endl << y_;
						cout << "\n\tМимо!!!\n\n";
						system("pause");
						marker = 1;
					}
					marker_ship_1_3 = false;
					marker_ship_1_3_1 = false;

					if (counter_pc_2 == 20)
					{
						cout << "\n\n\tПобедил компьютер !!!\n\n";
						system("pause");
						break;
					}
				}
			}
		}
	}

	return 1;
}


void fill(char array[][11], int size)
{
	for (int i = 0; i < size-1; i++)
	{
		for (int j = 0; j < size-1; j++)
		{
			array[i][j] = '~';
		}
	}
	for (int i = 0; i < size; i++)
		array[size - 1][i] = 100;
	for (int i = 0; i < size; i++)
		array[i][size - 1] = 100;
}


void show(char array_1[][11], char array_2[][11], int size)
{
	cout << "\n\t    Поле игрока:\t\t       Поле компьютера:";
	
	cout << "\n\t    ";
	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < size-1; j++)
		{
			cout << j + 1 << " ";
		}
		cout << "\t       ";
	}
	cout << endl << endl;

	for (int i = 0; i < size-1; i++)
	{
		if (i != size-2)
			cout << "\t" << i+1 << "   ";
		else
			cout << "\t" << i + 1 << "  ";
		for (int j = 0; j < size-1; j++)
		{
			cout << array_1[i][j] << " ";
		}
		if (i != size - 2)
			cout << "\t   " << i + 1 << "   ";
		else
			cout << "\t   " << i + 1 << "  ";
		for (int k = 0; k < size-1; k++)
		{
			cout << array_2[i][k] << " ";
		}
		cout << endl;
	}
}


void show_pc_vs_pc(char array_1[][11], char array_2[][11], int size)
{
	cout << "\n\t    Поле компьютера_1:\t\t       Поле компьютера_2:";

	cout << "\n\t    ";
	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < size - 1; j++)
		{
			cout << j + 1 << " ";
		}
		cout << "\t       ";
	}
	cout << endl << endl;

	for (int i = 0; i < size - 1; i++)
	{
		if (i != size - 2)
			cout << "\t" << i + 1 << "   ";
		else
			cout << "\t" << i + 1 << "  ";
		for (int j = 0; j < size - 1; j++)
		{
			cout << array_1[i][j] << " ";
		}
		if (i != size - 2)
			cout << "\t   " << i + 1 << "   ";
		else
			cout << "\t   " << i + 1 << "  ";
		for (int k = 0; k < size - 1; k++)
		{
			cout << array_2[i][k] << " ";
		}
		cout << endl;
	}
}


void auto_placement(char array_1[][11],  int size, int array_ship_3[], int array_ship_3_1[])
{
	int v;                // как стоит корабль, по вертикали или горизонтали?
	int x, y;             // координаты начала корабля
	bool marker = true;   // для проверки, что бы НЕ установить корабли бортами или углами
	int n;                // размерность корабля

	//Четырехпалубный
	n = 4;
	v = rand() % 2 + 1;
	if (v == 1)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;
		while (x < 1 || x > size - 1 || y < 1 || y > size - n)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '4';
	}
	else
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;
		while (x < 1 || x > size - n || y < 1 || y > size - 1)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;
		}

		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '4';
	}

	//Трехпалубный № 1
	n = 3;
	v = rand() % 2 + 1;

	if (v == 1)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1, j = 0; i < (y - 1 + n); i++, j += 2)
		{
			array_1[x - 1][i] = '3';
			array_ship_3[j] = x - 1;
			array_ship_3[j + 1] = i;
		}
	}
	else
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1, j = 0; i < (x - 1 + n); i++, j += 2)
		{
			array_1[i][y - 1] = '3';
			array_ship_3[j] = i;
			array_ship_3[j + 1] = y - 1;
		}
	}
		
	//Трехпалубный № 2
	n = 3;
	v = rand() % 2 + 1;

	if (v == 1)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1, j = 0; i < (y - 1 + n); i++, j += 2)
		{
			array_1[x - 1][i] = '3';
			array_ship_3_1[j] = x - 1;
			array_ship_3_1[j + 1] = i;
		}
	}
	else
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1, j = 0; i < (x - 1 + n); i++, j += 2)
		{
			array_1[i][y - 1] = '3';
			array_ship_3_1[j] = i;
			array_ship_3_1[j + 1] = y - 1;
		}
	}

	
	//Двухпалубный № 1
	n = 2;
	v = rand() % 2 + 1;

	if (v == 1)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '2';
	}
	else
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '2';
	}

	//Двухпалубный № 2
	n = 2;
	v = rand() % 2 + 1;

	if (v == 1)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '2';
	}
	else
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '2';
	}

	//Двухпалубный № 3
	n = 2;
	v = rand() % 2 + 1;

	if (v == 1)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '2';
	}
	else
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			x = rand() % 10 + 1;
			y = rand() % 10 + 1;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '2';
	}

	//Однопалубный № 1
	n = 1;

	x = rand() % 10 + 1;
	y = rand() % 10 + 1;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';

	//Однопалубный № 2
	n = 1;

	x = rand() % 10 + 1;
	y = rand() % 10 + 1;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';

	//Однопалубный № 3
	n = 1;

	x = rand() % 10 + 1;
	y = rand() % 10 + 1;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';

	//Однопалубный № 4
	n = 1;

	x = rand() % 10 + 1;
	y = rand() % 10 + 1;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		x = rand() % 10 + 1;
		y = rand() % 10 + 1;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';
}


void human_placement(char array_1[][11], char array_2[][11], int size, int array_ship_3[], int array_ship_3_1[])
{
	int v;                // как стоит корабль, по вертикали или горизонтали?
	int x, y;             // координаты начала корабля
	bool marker = true;   // для проверки, что бы НЕ установить корабли бортами или углами
	int n;                // размерность корабля

	system("CLS");
	show(array_1, array_2, size);
	cout << "\n\tЧетырехпалубный:\n";
	n = 4;
	cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
	cin >> v;
	while (v != 1 && v != 2)
	{
		cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
		cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
		cin >> v;
	}
	if (v == 1)
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;
		while (x < 1 || x > size - 1 || y < 1 || y > size - n)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
			cin >> x >> y;
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '4';
	}
	else
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
		cin >> x >> y;
		while (x < 1 || x > size - n || y < 1 || y > size - 1)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
			cin >> x >> y;
		}

		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '4';
	}

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tТрехпалубный № 1:\n";
	n = 3;
	cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
	cin >> v;
	while (v != 1 && v != 2)
	{
		cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
		cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
		cin >> v;
	}

	if (v == 1)
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1, j = 0; i < (y - 1 + n); i++, j += 2)
		{
			array_1[x - 1][i] = '3';
			array_ship_3[j] = x - 1;
			array_ship_3[j + 1] = i;
		}
	}
	else
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1, j = 0; i < (x - 1 + n); i++, j += 2)
		{
			array_1[i][y - 1] = '3';
			array_ship_3[j] = i;
			array_ship_3[j + 1] = y - 1;
		}
	}

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tТрехпалубный № 2:\n";
	n = 3;
	cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
	cin >> v;
	while (v != 1 && v != 2)
	{
		cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
		cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
		cin >> v;
	}

	if (v == 1)
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 1][y + 1] == '4' || array_1[x - 1][y + 1] == '3' || array_1[x - 1][y + 1] == '2' || array_1[x - 1][y + 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x - 2][y + 1] == '4' || array_1[x - 2][y + 1] == '3' || array_1[x - 2][y + 1] == '2' || array_1[x - 2][y + 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x][y + 1] == '4' || array_1[x][y + 1] == '3' || array_1[x][y + 1] == '2' || array_1[x][y + 1] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1, j = 0; i < (y - 1 + n); i++, j += 2)
		{
			array_1[x - 1][i] = '3';
			array_ship_3_1[j] = x - 1;
			array_ship_3_1[j + 1] = i;
		}
	}
	else
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x + 1][y - 1] == '4' || array_1[x + 1][y - 1] == '3' || array_1[x + 1][y - 1] == '2' || array_1[x + 1][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x + 1][y - 2] == '4' || array_1[x + 1][y - 2] == '3' || array_1[x + 1][y - 2] == '2' || array_1[x + 1][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x + 1][y] == '4' || array_1[x + 1][y] == '3' || array_1[x + 1][y] == '2' || array_1[x + 1][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1, j = 0; i < (x - 1 + n); i++, j += 2)
		{
			array_1[i][y - 1] = '3';
			array_ship_3_1[j] = i;
			array_ship_3_1[j + 1] = y - 1;
		}
	}

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tДвухпалубный № 1:\n";
	n = 2;
	cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
	cin >> v;
	while (v != 1 && v != 2)
	{
		cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
		cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
		cin >> v;
	}

	if (v == 1)
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '2';
	}
	else
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '2';
	}

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tДвухпалубный № 2:\n";
	n = 2;
	cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
	cin >> v;
	while (v != 1 && v != 2)
	{
		cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
		cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
		cin >> v;
	}

	if (v == 1)
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '2';
	}
	else
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '2';
	}

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tДвухпалубный № 3:\n";
	n = 2;
	cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
	cin >> v;
	while (v != 1 && v != 2)
	{
		cout << "\n\tНеобходимо ввести '1' или '2'!!!\n";
		cout << "\tставим по горозинтали - введите '1' или вертикали - введите '2'? ";
		cin >> v;
	}

	if (v == 1)
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}


		while (x < 1 || x > size - 1 || y < 1 || y > size - n || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 1][y - 1 + n] == '4' || array_1[x - 1][y - 1 + n] == '3' || array_1[x - 1][y - 1 + n] == '2' || array_1[x - 1][y - 1 + n] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x - 2][y - 1 + n] == '4' || array_1[x - 2][y - 1 + n] == '3' || array_1[x - 2][y - 1 + n] == '2' || array_1[x - 2][y - 1 + n] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x][y - 1 + n] == '4' || array_1[x][y - 1 + n] == '3' || array_1[x][y - 1 + n] == '2' || array_1[x][y - 1 + n] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = y - 1; i < (y - 1 + n); i++)
			array_1[x - 1][i] = '2';
	}
	else
	{
		cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
		cin >> x >> y;

		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
			)
		{
			marker = false;
		}
		while (x < 1 || x > size - n || y < 1 || y > size - 1 || marker == false)
		{
			cout << "\n\tНевозможно установить корабль с этой точки!!!";
			cout << "\n\tВведите координаты, откуда корабль будет расположен сверху вниз, № строки и № столбца:\n";
			cin >> x >> y;

			marker = true;
			if (
				array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
				|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
				|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
				|| array_1[x - 1 + n][y - 1] == '4' || array_1[x - 1 + n][y - 1] == '3' || array_1[x - 1 + n][y - 1] == '2' || array_1[x - 1 + n][y - 1] == '1'
				|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
				|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
				|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
				|| array_1[x - 1 + n][y - 2] == '4' || array_1[x - 1 + n][y - 2] == '3' || array_1[x - 1 + n][y - 2] == '2' || array_1[x - 1 + n][y - 2] == '1'
				|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
				|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
				|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
				|| array_1[x - 1 + n][y] == '4' || array_1[x - 1 + n][y] == '3' || array_1[x - 1 + n][y] == '2' || array_1[x - 1 + n][y] == '1'
				)
			{
				marker = false;
			}
		}
		for (int i = x - 1; i < (x - 1 + n); i++)
			array_1[i][y - 1] = '2';
	}

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tОднопалубный № 1:\n";
	n = 1;

	cout << "\n\tВведите координаты, где будет расположен корабль, № строки и № столбца:\n";
	cin >> x >> y;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		cout << "\n\tНевозможно установить корабль с этой точки!!!";
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tОднопалубный № 2:\n";
	n = 1;

	cout << "\n\tВведите координаты, где будет расположен корабль, № строки и № столбца:\n";
	cin >> x >> y;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		cout << "\n\tНевозможно установить корабль с этой точки!!!";
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tОднопалубный № 3:\n";
	n = 1;

	cout << "\n\tВведите координаты, где будет расположен корабль, № строки и № столбца:\n";
	cin >> x >> y;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		cout << "\n\tНевозможно установить корабль с этой точки!!!";
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';

	/////////////////////////////
	system("cls");
	show(array_1, array_2, size);

	cout << "\n\tОднопалубный № 4:\n";
	n = 1;

	cout << "\n\tВведите координаты, где будет расположен корабль, № строки и № столбца:\n";
	cin >> x >> y;

	if (
		array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
		|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
		|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
		|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
		|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
		|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
		|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
		|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
		|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
		)
	{
		marker = false;
	}


	while (x < 1 || x > size - 1 || y < 1 || y > size - 1 || marker == false)
	{
		cout << "\n\tНевозможно установить корабль с этой точки!!!";
		cout << "\n\tВведите координаты, откуда корабль будет расположен слева направо, № строки и № столбца:\n";
		cin >> x >> y;

		marker = true;
		if (
			array_1[x - 1][y - 1] == '4' || array_1[x - 1][y - 1] == '3' || array_1[x - 1][y - 1] == '2' || array_1[x - 1][y - 1] == '1'
			|| array_1[x - 1][y - 2] == '4' || array_1[x - 1][y - 2] == '3' || array_1[x - 1][y - 2] == '2' || array_1[x - 1][y - 2] == '1'
			|| array_1[x - 1][y] == '4' || array_1[x - 1][y] == '3' || array_1[x - 1][y] == '2' || array_1[x - 1][y] == '1'
			|| array_1[x - 2][y - 1] == '4' || array_1[x - 2][y - 1] == '3' || array_1[x - 2][y - 1] == '2' || array_1[x - 2][y - 1] == '1'
			|| array_1[x][y - 1] == '4' || array_1[x][y - 1] == '3' || array_1[x][y - 1] == '2' || array_1[x][y - 1] == '1'
			|| array_1[x - 2][y - 2] == '4' || array_1[x - 2][y - 2] == '3' || array_1[x - 2][y - 2] == '2' || array_1[x - 2][y - 2] == '1'
			|| array_1[x - 2][y] == '4' || array_1[x - 2][y] == '3' || array_1[x - 2][y] == '2' || array_1[x - 2][y] == '1'
			|| array_1[x][y - 2] == '4' || array_1[x][y - 2] == '3' || array_1[x][y - 2] == '2' || array_1[x][y - 2] == '1'
			|| array_1[x][y] == '4' || array_1[x][y] == '3' || array_1[x][y] == '2' || array_1[x][y] == '1'
			)
		{
			marker = false;
		}
	}

	array_1[x - 1][y - 1] = '1';
}